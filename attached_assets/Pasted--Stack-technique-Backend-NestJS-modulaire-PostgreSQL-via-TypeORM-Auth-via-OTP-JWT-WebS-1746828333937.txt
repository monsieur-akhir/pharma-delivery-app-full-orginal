üß± Stack technique :
- Backend : NestJS modulaire, PostgreSQL via TypeORM, Auth via OTP + JWT, WebSocket (chat temps r√©el), BullMQ (t√¢ches planifi√©es), int√©grations tierces (Twilio, OpenAI, Tesseract, Firebase, Stripe).
- Mobile App : React Native + expo go + Redux Toolkit, avec g√©olocalisation, carte, chat vid√©o, upload photo (ordonnances), paiement mobile.
- Backoffice Admin : Angular + Angular Material pour la gestion des utilisateurs, pharmacies, fournisseurs, logs, IA.
- Stockage fichiers : Firebase Storage.
- Notifications : Firebase FCM 
‚úÖ Ce que tu dois g√©n√©rer :
### 1. Backend NestJS
- Structure modulaire avec les modules suivants :
  - `AuthModule` (OTP brevo, JWT)
  - `UserModule` (CRUD utilisateurs avec r√¥les CLIENT, PHARMACIST, DELIVERY, ADMIN)
  - `PharmacyModule` (ajout, validation, gestion de stock, horaires)
  - `MedicineModule` (disponibilit√© par pharmacie, stock, seuils critiques)
  - `OrderModule` (cr√©ation, statut, lien avec livraison et prescription)
  - `PrescriptionModule` (upload ordonnance + OCR via Tesseract, validation manuelle)
  - `ReminderModule` (prise m√©dicaments avec cron)
  - `ChatModule` (chat texte, vid√©o, WebSocket)
  - `SupplierOrderModule` (commande automatique ou manuelle vers fournisseurs)
  - `AdminModule` (logs, validation pharmacies, r√©glages IA)
- Entit√©s TypeORM pour chaque module avec relations correctes (User ‚Üî Pharmacy ‚Üî Medicine ‚Üî Order ‚Üî SupplierOrder).
- Middleware d'authentification JWT + Guard par r√¥le.
- Int√©gration :
  - Tesseract.js pour OCR ordonnances
  - OpenAI pour assistant IA (analyse prescription)
  - BullMQ pour rappels de prise, commandes auto
  - Payement mobile money(orange money, momo, moov money, wave)
  - Payement √† la livraison

### 2. Mobile App (React Native + Redux)
- √âcrans √† impl√©menter :
  - Onboarding OTP + permission GPS
  - Recherche m√©dicaments (carte + liste pharmacies autour)
  - Ajout au panier / choix retrait ou livraison
  - Upload ordonnance (cam√©ra ou galerie) + preview OCR
  - Paiement int√©gr√© (Stripe/Mobile Money)
  - Historique commandes / rappels
  - Chat IA et vid√©o avec pharmacien (Stream Chat ou Twilio)
- Redux :
  - Slices pour `auth`, `medicines`, `orders`, `prescriptions`, `reminders`, `chat`, `userLocation`
- UI fluide, intuitive et inspir√©e des apps Uber : suivi en temps r√©el, ETA du livreur, chat ouvert post-commande.

### 3. Backoffice Admin (Angular)
- Tableau de bord admin :
  - Liste et validation des pharmacies
  - Gestion des utilisateurs et r√¥les
  - Supervision des commandes, prescriptions
  - R√©glage seuils IA / auto-commande
  - Logs d‚Äôactivit√©, performance des pharmacies
  - Int√©gration graphique IA pour analyser tendances (via OpenAI ou LangChain)

### 4. API Documentation
- Swagger UI g√©n√©r√© automatiquement
- Regroupe endpoints par modules (auth, user, medicine, orders, suppliers, admin)

### 5. Setup local
- Docker Compose avec PostgreSQL, Redis (BullMQ), Minio ou Firebase √©mulateur
- README clair avec :
  - Installation
  - Variables d‚Äôenvironnement
  - Scripts de d√©marrage (backend, mobile, admin)