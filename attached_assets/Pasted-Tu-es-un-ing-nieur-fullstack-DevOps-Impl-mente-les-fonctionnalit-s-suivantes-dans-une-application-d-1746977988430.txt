Tu es un ing√©nieur fullstack DevOps. Impl√©mente les fonctionnalit√©s suivantes dans une application de livraison de m√©dicaments en React Native (Expo) avec back-end NestJS.

üîß 1. Logging Backend (NestJS)
Objectif : S‚Äôassurer que toutes les actions du back-end sont bien logg√©es pour le debug, la tra√ßabilit√© et l‚Äôaudit et aussi que toutes les api sont accessible je ne veux pas de version simplifi√© ou minimale, je veux une version compl√®te complexe et robuste.

Remettre en place un logger global (ex : LoggerService custom ou nestjs-pino)

Logger toutes les requ√™tes HTTP entrantes (m√©thode, route, IP, user agent, etc.)

Logger les erreurs avec stack trace

Logger les √©v√©nements m√©tier (ex: g√©n√©ration OTP, login, cr√©ation commande, etc.)

üåê 2. API Accessibilit√©
V√©rifie que toutes les routes API attendues sont expos√©es dans Swagger (/docs) et testables

V√©rifie que les CORS sont bien configur√©s pour les apps web/mobile

Assure-toi que la documentation est bien synchronis√©e avec les routes r√©elles

Possibilit√© d‚Äôajouter un middleware global pour logger et contr√¥ler l‚Äôacc√®s

üìç 3. Suivi de livraison par g√©olocalisation
Fonctionnalit√© :

Suivi en temps r√©el de la position du livreur sur la carte c√¥t√© client

Mise √† jour r√©guli√®re de la position via WebSocket ou polling REST

Backend :

API pour recevoir les coordonn√©es GPS du livreur (lat/lng + userId + timestamp)

Stockage temporaire en Redis pour haute fr√©quence ou persistance en DB si n√©cessaire

Mobile (livreur) :

Permission GPS avec Expo

Envoi p√©riodique des coordonn√©es (toutes les 5‚Äì10 sec) via background task

Mobile (client) :

Affichage carte avec position temps r√©el du livreur

üì± 4. Am√©lioration App Mobile (React Native + Expo)
UI/UX :

Am√©liorer les √©crans de connexion (OTP), commandes, et suivi

Utiliser React Navigation, React Query, AsyncStorage pour la gestion d‚Äô√©tat/session

Int√©gration du SDK TypeScript g√©n√©r√© automatiquement √† partir du Swagger

Affichage du suivi en temps r√©el via react-native-maps et WebSocket

üéØ Objectif
Cr√©er une solution mobile + back-office robuste, tra√ßable et fluide, avec suivi de livraison en temps r√©el, logs complets et une exp√©rience utilisateur de qualit√©.